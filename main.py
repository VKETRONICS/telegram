from fastapi import FastAPI, Request
import httpx
import os
from dotenv import load_dotenv

load_dotenv()

app = FastAPI()

BOT_TOKEN = os.getenv("BOT_TOKEN")
TELEGRAM_API_URL = f"https://api.telegram.org/bot{BOT_TOKEN}"

@app.post("/webhook")
async def telegram_webhook(request: Request):
    data = await request.json()

    if "message" in data:
        message = data["message"]
        chat_id = message.get("chat", {}).get("id")
        text = message.get("text", "")
        print(f"–ü–û–õ–£–ß–ï–ù–û –°–û–û–ë–©–ï–ù–ò–ï: {text}")

        if chat_id and text:
            if text == "/start":
                await send_main_menu(chat_id)
            elif text in ["‚ÑπÔ∏è –û –Ω–∞—Å", "–û –Ω–∞—Å"]:
                await send_message(chat_id, "–ú—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞ ETRONICS. –†–∞–±–æ—Ç–∞–µ–º —Å —Ç–µ—Ö–Ω–∏–∫–æ–π –∏ —É–º–Ω—ã–º–∏ —Ä–µ—à–µ–Ω–∏—è–º–∏.")
            elif text == "üì¶ –ö–∞—Ç–∞–ª–æ–≥":
                await send_catalog_menu(chat_id)
            else:
                await send_message(chat_id, f"–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: {text}")

    elif "callback_query" in data:
        callback = data["callback_query"]
        chat_id = callback["message"]["chat"]["id"]
        data_value = callback.get("data", "")
        print(f"CALLBACK: {data_value}")

        if data_value == "phones":
            await send_message(chat_id, "–†–∞–∑–¥–µ–ª —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤")
        elif data_value == "laptops":
            await send_message(chat_id, "–†–∞–∑–¥–µ–ª –Ω–æ—É—Ç–±—É–∫–æ–≤")
        elif data_value == "components":
            await send_message(chat_id, "–†–∞–∑–¥–µ–ª –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏—Ö")

    return {"ok": True}

async def send_message(chat_id: int, text: str, reply_markup=None):
    payload = {
        "chat_id": chat_id,
        "text": text,
        "reply_markup": reply_markup
    }
    async with httpx.AsyncClient() as client:
        await client.post(f"{TELEGRAM_API_URL}/sendMessage", json=payload)

async def send_main_menu(chat_id: int):
    reply_markup = {
        "keyboard": [
            [{"text": "üì¶ –ö–∞—Ç–∞–ª–æ–≥"}],
            [{"text": "‚ÑπÔ∏è –û –Ω–∞—Å"}]
        ],
        "resize_keyboard": True
    }
    welcome_text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ETRONICS STORE! –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:"
    await send_message(chat_id, welcome_text, reply_markup)

async def send_catalog_menu(chat_id: int):
    reply_markup = {
        "inline_keyboard": [
            [{"text": "üì± –°–º–∞—Ä—Ç—Ñ–æ–Ω—ã", "callback_data": "phones"}],
            [{"text": "üíª –ù–æ—É—Ç–±—É–∫–∏", "callback_data": "laptops"}],
            [{"text": "üñ• –ö–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ", "callback_data": "components"}]
        ]
    }
    await send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup)
