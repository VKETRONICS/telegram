from fastapi import FastAPI, Request
import httpx
import os
from dotenv import load_dotenv

load_dotenv()

app = FastAPI()

BOT_TOKEN = os.getenv("BOT_TOKEN")
TELEGRAM_API_URL = f"https://api.telegram.org/bot{BOT_TOKEN}"

@app.post("/webhook")
async def telegram_webhook(request: Request):
    data = await request.json()

    if "message" in data:
        message = data["message"]
        chat_id = message.get("chat", {}).get("id")
        text = message.get("text", "")
        print(f"–ü–û–õ–£–ß–ï–ù–û –°–û–û–ë–©–ï–ù–ò–ï: {text}")

        if chat_id and text:
            if text == "/start":
                await send_main_menu(chat_id)
            elif text in ["‚ÑπÔ∏è –û –Ω–∞—Å", "–û –Ω–∞—Å"]:
                about_text = (
                    "<b>–ú—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞ ETRONICS üíª</b>\n\n"
                    "–í–∞—à –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä—Ç–Ω—ë—Ä –≤ –º–∏—Ä–µ –≤—ã—Å–æ–∫–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π.\n\n"
                    "<b>–ú—ã –∑–∞–Ω–∏–º–∞–µ–º—Å—è:</b>\n"
                    "‚Ä¢ –°–±–æ—Ä–∫–æ–π –ü–ö –ø–æ–¥ –ª—é–±—ã–µ –∑–∞–¥–∞—á–∏\n"
                    "‚Ä¢ –ü—Ä–æ–¥–∞–∂–µ–π –Ω–æ—É—Ç–±—É–∫–æ–≤ –≤–µ–¥—É—â–∏—Ö –±—Ä–µ–Ω–¥–æ–≤\n"
                    "‚Ä¢ –ê–∫—Å–µ—Å—Å—É–∞—Ä–∞–º–∏: –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –º—ã—à–∏, –Ω–∞—É—à–Ω–∏–∫–∏ –∏ –¥—Ä.\n\n"
                    "<b>–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>\n"
                    "‚Ä¢ –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥\n"
                    "‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞\n"
                    "‚Ä¢ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–Ω—ã\n"
                    "‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞\n"
                    "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ\n\n"
                    "<b>–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç:</b>\n"
                    "‚Ä¢ –ò–≥—Ä–æ–≤—ã–µ –∏ –æ—Ñ–∏—Å–Ω—ã–µ –ü–ö\n"
                    "‚Ä¢ –ù–æ—É—Ç–±—É–∫–∏ –¥–ª—è —É—á—ë–±—ã –∏ —Ä–∞–±–æ—Ç—ã\n"
                    "‚Ä¢ –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã –∏ –Ω–∞–∫–æ–ø–∏—Ç–µ–ª–∏"
                )
                await send_message(chat_id, about_text)
            elif text == "üì¶ –ö–∞—Ç–∞–ª–æ–≥":
                await send_catalog_menu(chat_id)
            elif text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã":
                await send_message(chat_id, "üìß support@etronics.ru\nüì± @etronics_support")
            elif text == "‚ùì –ü–æ–º–æ—â—å":
                await send_message(chat_id, "–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ –º—ã –ø–æ–º–æ–∂–µ–º –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ.")
            else:
                await send_message(chat_id, f"–í—ã –Ω–∞–ø–∏—Å–∞–ª–∏: {text}")

    elif "callback_query" in data:
        callback = data["callback_query"]
        chat_id = callback["message"]["chat"]["id"]
        data_value = callback.get("data", "")
        print(f"CALLBACK: {data_value}")

        if data_value == "phones":
            await send_message(chat_id, "üì± –†–∞–∑–¥–µ–ª —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤ —Å–∫–æ—Ä–æ –ø–æ—è–≤–∏—Ç—Å—è!")
        elif data_value == "laptops":
            await send_message(chat_id, "üíª –†–∞–∑–¥–µ–ª –Ω–æ—É—Ç–±—É–∫–æ–≤ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")
        elif data_value == "components":
            await send_message(chat_id, "üñ• –ó–¥–µ—Å—å –±—É–¥—É—Ç –∫–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ –¥–ª—è —Å–±–æ—Ä–∫–∏ –ü–ö.")

    return {"ok": True}

async def send_message(chat_id: int, text: str, reply_markup=None):
    payload = {
        "chat_id": chat_id,
        "text": text,
        "reply_markup": reply_markup,
        "parse_mode": "HTML"
    }
    async with httpx.AsyncClient() as client:
        await client.post(f"{TELEGRAM_API_URL}/sendMessage", json=payload)

async def send_main_menu(chat_id: int):
    reply_markup = {
        "keyboard": [
            [{"text": "üì¶ –ö–∞—Ç–∞–ª–æ–≥"}],
            [{"text": "‚ÑπÔ∏è –û –Ω–∞—Å"}, {"text": "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"}],
            [{"text": "‚ùì –ü–æ–º–æ—â—å"}]
        ],
        "resize_keyboard": True
    }
    welcome_text = "<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ETRONICS STORE! üõç</b>\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ üëá"
    await send_message(chat_id, welcome_text, reply_markup)

async def send_catalog_menu(chat_id: int):
    reply_markup = {
        "inline_keyboard": [
            [{"text": "üì± –°–º–∞—Ä—Ç—Ñ–æ–Ω—ã", "callback_data": "phones"}],
            [{"text": "üíª –ù–æ—É—Ç–±—É–∫–∏", "callback_data": "laptops"}],
            [{"text": "üñ• –ö–æ–º–ø–ª–µ–∫—Ç—É—é—â–∏–µ", "callback_data": "components"}]
        ]
    }
    await send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞ üëá", reply_markup)
